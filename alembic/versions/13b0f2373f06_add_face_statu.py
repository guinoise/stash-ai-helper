"""Add face statu

Revision ID: 13b0f2373f06
Revises: c3e881fbcc9b
Create Date: 2025-01-20 03:08:42.697485

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql.base import PGDialect
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '13b0f2373f06'
down_revision: Union[str, None] = 'c3e881fbcc9b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def _get_facestatus():
    return postgresql.ENUM('DISCOVERED', 
                           'CONFIRMED', 
                           'DISCARD', 
                           'AUTO_DISCARD', 
                           'AUTO_CONFIRMED', 
                           name='facestatus')

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    if isinstance(op.get_context().dialect, PGDialect):
        face_status= _get_facestatus()
        face_status.create(op.get_bind())
        with op.batch_alter_table('deepface_face', schema=None) as batch_op:
            batch_op.add_column(sa.Column('status', face_status, server_default='DISCOVERED', nullable=False))
    else:
        with op.batch_alter_table('deepface_face', schema=None) as batch_op:
            batch_op.add_column(sa.Column('status', sa.Enum('DISCOVERED', 'CONFIRMED', 'DISCARD', 'AUTO_DISCARD', 'AUTO_CONFIRMED', name='facestatus'), server_default='DISCOVERED', nullable=False))
    # with op.batch_alter_table('deepface_face', schema=None) as batch_op:
    #     batch_op.add_column(sa.Column('status', sa.Enum('DISCOVERED', 'CONFIRMED', 'DISCARD', 'AUTO_DISCARD', 'AUTO_CONFIRMED', name='facestatus'), server_default='DISCOVERED', nullable=False))

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('deepface_face', schema=None) as batch_op:
        batch_op.drop_column('status')
    if isinstance(op.get_context().dialect, PGDialect):
        face_status= _get_facestatus()
        face_status.drop(op.get_bind())    

    # ### end Alembic commands ###
